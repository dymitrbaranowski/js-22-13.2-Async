{"mappings":"AAKA,SAASA,EAASC,GAChB,MAAMC,EAAS,CACbC,WAAY,KACTC,KAAG,MACHC,MAAI,MAGT,OAAO,IAAIC,SAAQ,CAACC,EAASC,IAC3BC,YAAW,IAAMF,EAAQL,EAAOD,KAAQ,M,EAI5CS,iBACE,IACEC,QAAQC,KAAK,iBACb,MAAMP,EAAQL,EAAS,SACjBI,EAAOJ,EAAS,QAChBa,EAAQb,EAAS,cAEjBE,QAAeI,QAAQQ,IAAI,CAACT,EAAOD,EAAMS,IAG/C,OAFAF,QAAQI,IAAIb,GAELA,C,CAGP,MAAOc,GACPL,QAAQI,IAAI,SAAiBC,E,GAIjCC,GAAgBC,MAAKhB,GAAUS,QAAQI,IAAIb","sources":["src/js/03-async.js"],"sourcesContent":["// Синтаксис async/await\n// Последовательные операции\n// Паралельные операции с Promise.all()\n// try...catch\n\nfunction getFruit(name) {\n  const fruits = {\n    strawberry: '🍓',\n    kiwi: '🥝 ',\n    apple: '🍎',\n  };\n\n  return new Promise((resolve, reject) =>\n    setTimeout(() => resolve(fruits[name]), 500)\n  );\n}\n\nasync function aMakeSmoothie() {\n  try {\n    console.time('aMakeSmoothie');\n    const apple = getFruit('apple');\n    const kiwi = getFruit('kiwi');\n    const berry = getFruit('strawberry');\n\n    const fruits = await Promise.all([apple, kiwi, berry]);\n    console.log(fruits);\n\n    return fruits;\n\n    console.timeEnd('aMakeSmoothie');\n  } catch (error) {\n    console.log('Ошибка' + error);\n  }\n}\n\naMakeSmoothie().then(fruits => console.log(fruits));\n\nfunction makeSmoothie() {\n  getFruit('apple').then(apple => {\n    console.log(apple);\n\n    getFruit('kiwi').then(apple => {\n      console.log(apple);\n    });\n  });\n}\n\n// const fn = async function () {};\n\n// const arr = async () => {};\n\n// const x = {\n//   async getName() {},\n// };\n// class X {\n//   async getName() {}\n// }\n// async function aMakeSmoothie() {\n//   try {\n//     console.time('aMakeSmoothie');\n//     const apple = getFruit('apple');\n//     const kiwi = getFruit('kiwi');\n//     const berry = getFruit('strawberry');\n\n//     const fruits = await Promise.all([apple, kiwi, berry]);\n//     console.log(fruits);\n//     console.timeEnd('aMakeSmoothie');\n\n//     return fruits;\n//   } catch (error) {\n//     console.log('Ошибка');\n//   }\n// }\n\n// aMakeSmoothie();\n\n// async function fn () {}\n\n// const fn  = async function () {}\n\n// const arr = async () => {}\n\n// const x = {\n//   async getname () {}\n// }\n\n// class X {\n//   async getName () {}\n// }\n"],"names":["$7f08c13e08898841$var$getFruit","name","fruits","strawberry","kiwi","apple","Promise","resolve","reject","setTimeout","async","console","time","berry","all","log","error","$7f08c13e08898841$var$aMakeSmoothie","then"],"version":3,"file":"03-async.6a53ca6d.js.map"}